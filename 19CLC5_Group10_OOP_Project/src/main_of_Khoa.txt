#include "vehicle.h"
#include "trafficroad.h"
#include "trafficmanager.h"
#include <SFML/Audio.hpp>
#include <SFML/Graphics.hpp>
#include <SFML/Window.hpp>
#include <SFML/System.hpp>

int main()
{
    int numcar = 2;
    string Car[numcar] =
	{
		"assets/textures/vehicles/fast/AudiBlue.png",
		"assets/textures/vehicles/fast/AudiGreen.png"
	};
    vector <sf::Texture*> m_car;
    for (int i = 0; i < numcar; i++)
	{
		m_car.push_back(new sf::Texture);
		m_car[i]->loadFromFile(Car[i]);
	}

    srand(time(NULL));				// Seeds the random number generator

	sf::RenderWindow window(sf::VideoMode(800, 600), "Cross the street"); // creates the window
	window.setFramerateLimit(60);	// Limits framerate to 60fps

    double elapsed = 0.01;

    //trafficlane tf(900,200,100,-1,3,textt);
    //vehicle s(-0.3,150,200,100,m_car);
    trafficmanager a;

    sf::Clock gameClock;	// A clock to track how long the game has been running
	sf::Clock frameClock;	// Tracks how much time the last frame took

    while (window.isOpen())
    {
        float gameTime = gameClock.getElapsedTime().asSeconds();
		sf::Event event;
		while (window.pollEvent(event))
		{
			// "close requested" event: we close the window
			if (event.type == sf::Event::Closed)
				window.close();
		}
		frameClock.restart();

        //tf.update(elapsed, gameTime);
        //s.update(elapsed);
        a.update(elapsed,gameTime);

		window.clear(sf::Color::Black);

		//tf.draw(window);
        //s.draw(window);
        a.draw(window);

        window.display();
        elapsed = frameClock.getElapsedTime().asSeconds();

		// Speed up game time for inital population of map
        if (gameTime < 0.1)
		{
			elapsed = elapsed * 60;
		}
    }
    return 0;
}
